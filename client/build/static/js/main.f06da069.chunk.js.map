{"version":3,"sources":["components/layout/spinner.gif","components/layout/Spinner.js","redux/actions/alertActions.js","redux/actions/types.js","redux/actions/userActions.js","components/auth/Login.js","components/auth/Register.js","components/profiles/ProfileItem.js","redux/actions/profileActions.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/AddEducations.js","components/profile-forms/AddExperience.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/posts/PostItem.js","redux/actions/postActions.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/Alert.js","components/layout/NotFound.js","components/routing/Routes.js","components/layout/Navbar.js","components/layout/Landing.js","App.js","redux/reducers/index.js","redux/reducers/userReducers.js","redux/reducers/profileReducers.js","redux/reducers/postReducers.js","redux/reducers/alertReducers.js","Root.js","index.js"],"names":["module","exports","style","src","spinner","width","margin","display","maxWidth","alt","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","register","name","email","password","a","config","headers","body","axios","post","res","token","data","get","userInfo","localStorage","setItem","JSON","stringify","console","error","errors","response","forEach","login","Login","location","history","useDispatch","userLogin","useSelector","state","loading","redirect","search","split","push","goBack","useState","formData","setFormData","onChangeHandler","e","target","value","onSubmitHandler","preventDefault","useEffect","className","onSubmit","placeholder","onChange","required","minLength","Spinner","to","Register","userRegister","password2","ProfileItem","profile","user","_id","avatar","status","company","skills","slice","map","skill","index","key","getGithubRepos","username","statusText","getCurrentProfile","getState","createProfile","edit","Profiles","profileLoadPage","hasMore","profiles","loadingPage","loadProfiles","date","page","nextPage","currentDate","Date","getTime","profileItems","loadMore","ProfileTop","website","social","href","rel","twitter","facebook","linkedin","instagram","ProfileAbout","bio","trim","ProfileExperience","experience","title","current","from","description","format","ProfileEducation","education","school","degree","fieldofstudy","ProfileGithub","profileRepos","repos","length","repo","html_url","stargazers_count","watchers_count","forks_count","Profile","profileId","match","params","profileSingle","userId","githubusername","DashboardActions","props","Experience","onDeleteExperienceHandler","experienceId","delete","deleteExperience","experiences","exp","onClick","Education","onDeleteEducationHandler","educationId","deleteEducation","educations","edu","Dashboard","profileCurrent","deleted","deleteAccountHandler","window","confirm","withRouter","toDateDisabled","toggleDisabled","put","addEducation","checked","disabled","cols","rows","addExperience","youtube","displaySocialInputs","toggleSocialInputs","initialState","profileData","PostItem","text","likes","comments","showActions","postId","defaultProps","PostForm","setText","Posts","postLoadPage","addedPosts","posts","loadingPost","loadPosts","addedPostsItems","CommentForm","class","addComment","CommentItem","comment","commentId","deleteComment","Post","postSingle","loadingComment","getPost","Alert","alerts","alertManager","alert","NotFound","Routes","exact","path","component","AddEducation","AddExperience","CreateProfile","EditProfile","Navbar","authLinks","removeItem","guestLinks","Landing","App","combineReducers","action","success","concat","filter","userInfoFromStorage","getItem","parse","children","middleware","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","ReactDOM","render","Root","document","getElementById"],"mappings":"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","file":"static/js/main.f06da069.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.c38d59b0.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default ({ style }) => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={\r\n        style\r\n          ? style\r\n          : {\r\n              width: '550px',\r\n              margin: 'auto',\r\n              display: 'block',\r\n              maxWidth: '100%',\r\n            }\r\n      }\r\n      alt='Loading'\r\n    />\r\n  </Fragment>\r\n);\r\n","import { v4 as uuid } from 'uuid';\r\nimport { ALERT_SET, ALERT_REMOVE, ALERT_RESET } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => {\r\n  return (dispatch) => {\r\n    const id = uuid();\r\n    dispatch({\r\n      type: ALERT_SET,\r\n      payload: {\r\n        id: id,\r\n        msg: msg,\r\n        alertType: alertType,\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: ALERT_REMOVE,\r\n        payload: id,\r\n      });\r\n    }, timeout);\r\n  };\r\n};\r\n\r\nexport const resetAlert = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ALERT_RESET,\r\n    });\r\n  };\r\n};\r\n","/* Alerts */\r\nexport const ALERT_SET = 'ALERT_SET';\r\nexport const ALERT_REMOVE = 'ALERT_REMOVE';\r\nexport const ALERT_RESET = 'ALERT_RESET';\r\n\r\n/* Auth */\r\n// Register & Log In\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\n/* Profile/Profiles */\r\n// Profiles Page\r\nexport const PROFILE_LOAD_PAGE_REQUEST = 'PROFILE_LOAD_PAGE_REQUEST';\r\nexport const PROFILE_LOAD_PAGE_SUCCESS = 'PROFILE_LOAD_PAGE_SUCCESS';\r\nexport const PROFILE_LOAD_PAGE_FAIL = 'PROFILE_LOAD_PAGE_FAIL';\r\nexport const PROFILE_LOAD_PAGE_RESET = 'PROFILE_LOAD_PAGE_RESET';\r\n\r\n// Load single profile page\r\nexport const PROFILE_LOAD_SINGLE_SUCCESS = 'PROFILE_LOAD_SINGLE_SUCCESS';\r\nexport const PROFILE_LOAD_SINGLE_FAIL = 'PROFILE_LOAD_SINGLE_FAIL';\r\nexport const PROFILE_LOAD_SINGLE_RESET = 'PROFILE_LOAD_SINGLE_RESET';\r\n\r\n// Load single profile github repositories\r\nexport const PROFILE_LOAD_REPOS_SUCCESS = 'PROFILE_LOAD_REPOS_SUCCESS';\r\nexport const PROFILE_LOAD_REPOS_FAIL = 'PROFILE_LOAD_REPOS_FAIL';\r\nexport const PROFILE_LOAD_REPOS_RESET = 'PROFILE_LOAD_REPOS_RESET';\r\n\r\n// Create/Update Profile for current user\r\nexport const PROFILE_CREATE_SUCCESS = 'PROFILE_CREATE_SUCCESS';\r\nexport const PROFILE_CREATE_FAIL = 'PROFILE_CREATE_FAIL';\r\nexport const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\r\nexport const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\r\n\r\n// Get currently logged in user profile\r\nexport const PROFILE_LOAD_CURRENT_SUCCESS = 'PROFILE_LOAD_CURRENT_SUCCESS';\r\nexport const PROFILE_LOAD_CURRENT_FAIL = 'PROFILE_LOAD_CURRENT_FAIL';\r\nexport const PROFILE_LOAD_CURRENT_RESET = 'PROFILE_LOAD_CURRENT_RESET';\r\n\r\n// Delete currently logged in user profile's education\r\nexport const PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS =\r\n  'PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS';\r\nexport const PROFILE_DELETE_CURRENT_EDUCATION_FAIL =\r\n  'PROFILE_DELETE_CURRENT_EDUCATION_FAIL';\r\n\r\n// Delete currently logged in user profile's experience\r\nexport const PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS =\r\n  'PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS';\r\nexport const PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL =\r\n  'PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL';\r\n\r\n// Add education to currently logged in user profile\r\nexport const PROFILE_ADD_EDUCATION_SUCCESS = 'PROFILE_ADD_EDUCATION_SUCCESS';\r\nexport const PROFILE_ADD_EDUCATION_FAIL = 'PROFILE_ADD_EDUCATION_FAIL';\r\n\r\n// Add experience to currently logged in user profile\r\nexport const PROFILE_ADD_EXPERIENCE_SUCCESS = 'PROFILE_ADD_EXPERIENCE_SUCCESS';\r\nexport const PROFILE_ADD_EXPERIENCE_FAIL = 'PROFILE_ADD_EXPERIENCE_FAIL';\r\n\r\n// Delete current profile and user\r\nexport const PROFILE_DELETE_SUCCESS = 'PROFILE_DELETE_SUCCESS';\r\nexport const PROFILE_DELETE_FAIL = 'PROFILE_DELETE_FAIL';\r\n\r\n/* Posts */\r\n// Posts Page\r\nexport const POST_LOAD_PAGE_REQUEST = 'POST_LOAD_PAGE_REQUEST';\r\nexport const POST_LOAD_PAGE_SUCCESS = 'POST_LOAD_PAGE_SUCCESS';\r\nexport const POST_LOAD_PAGE_FAIL = 'POST_LOAD_PAGE_FAIL';\r\nexport const POST_LOAD_PAGE_RESET = 'POST_LOAD_PAGE_RESET';\r\n\r\n// Add post\r\nexport const POST_ADD_REQUEST = 'POST_ADD_REQUEST';\r\nexport const POST_ADD_SUCCESS = 'POST_ADD_SUCCESS';\r\nexport const POST_ADD_FAIL = 'POST_ADD_FAIL';\r\n\r\n// Get single post\r\nexport const POST_LOAD_SINGLE_SUCCESS = 'POST_LOAD_SINGLE_SUCCESS';\r\nexport const POST_LOAD_SINGLE_FAIL = 'POST_LOAD_SINGLE_FAIL';\r\nexport const POST_LOAD_SINGLE_RESET = 'POST_LOAD_SINGLE_RESET';\r\n\r\n// Add comment\r\nexport const POST_ADD_COMMENT_REQUEST = 'POST_ADD_COMMENT_REQUEST';\r\nexport const POST_ADD_COMMENT_SUCCESS = 'POST_ADD_COMMENT_SUCCESS';\r\nexport const POST_ADD_COMMENT_FAIL = 'POST_ADD_COMMENT_FAIL';\r\n\r\n// Update likes\r\nexport const POST_UPDATE_LIKES_SUCCESS = 'POST_UPDATE_LIKES_SUCCESS';\r\nexport const POST_UPDATE_LIKES_FAIL = 'POST_UPDATE_LIKES_FAIL';\r\n\r\n// Delete post\r\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS';\r\nexport const POST_DELETE_FAIL = 'POST_DELETE_FAIL';\r\n\r\n// Delete comment\r\nexport const POST_DELETE_COMMENT_SUCCESS = 'POST_DELETE_COMMENT_SUCCESS';\r\nexport const POST_DELETE_COMMENT_FAIL = 'POST_DELETE_COMMENT_FAIL';\r\n","import axios from 'axios';\r\n\r\nimport { setAlert } from './alertActions';\r\nimport {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  PROFILE_LOAD_CURRENT_RESET,\r\n} from './types';\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const body = { name, email, password };\r\n\r\n    try {\r\n      let res = await axios.post('/api/users', body, config);\r\n\r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n      });\r\n\r\n      const token = res.data.token;\r\n      config.headers['x-auth-token'] = token;\r\n      res = await axios.get('/api/auth', config);\r\n\r\n      const userInfo = {\r\n        ...res.data,\r\n        token,\r\n      };\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: userInfo,\r\n      });\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n    } catch (err) {\r\n      console.error(err);\r\n\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({ type: USER_REGISTER_FAIL, payload: errors });\r\n    }\r\n  };\r\n};\r\n\r\n// Login user\r\nexport const login = ({ email, password }) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const body = { email, password };\r\n\r\n    try {\r\n      let res = await axios.post('/api/auth', body, config);\r\n\r\n      const token = res.data.token;\r\n      config.headers['x-auth-token'] = token;\r\n\r\n      res = await axios.get('/api/auth', config);\r\n\r\n      const userInfo = {\r\n        ...res.data,\r\n        token,\r\n      };\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: userInfo,\r\n      });\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n    } catch (err) {\r\n      console.error(err);\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload: errors,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Logout\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: PROFILE_LOAD_CURRENT_RESET });\r\n  };\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport { login } from '../../redux/actions/userActions';\r\nimport { ALERT_RESET } from '../../redux/actions/types';\r\n\r\nconst Login = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading } = userLogin;\r\n\r\n  const redirect = location.search && location.search.split('=')[1];\r\n\r\n  if (userInfo) {\r\n    if (redirect) {\r\n      history.push(redirect);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  }\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChangeHandler = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ALERT_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmitHandler(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            minLength='6'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' value='Login' className='btn btn-primary' />\r\n        {loading && <Spinner />}\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account?{' '}\r\n        <Link to={`/register?redirect=${redirect}`}>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport { register } from '../../redux/actions/userActions';\r\nimport { setAlert } from '../../redux/actions/alertActions';\r\nimport { ALERT_RESET, USER_REGISTER_RESET } from '../../redux/actions/types';\r\n\r\nconst Register = ({ history, location }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading } = userRegister;\r\n\r\n  if (userInfo) {\r\n    if (redirect) {\r\n      history.push(redirect);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  }\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChangeHandler = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      dispatch(setAlert('Passwords do not match', 'danger'));\r\n    } else {\r\n      dispatch(\r\n        register({\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ALERT_RESET });\r\n      dispatch({ type: USER_REGISTER_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmitHandler(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n\r\n          <small className='form-text'>\r\n            This site uses Gravatar, so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n\r\n        {loading && <Spinner />}\r\n\r\n        <input type='submit' value='Register' className='btn btn-primary' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account?{' '}\r\n        <Link to={`/login?redirect=${redirect}`}>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileItem = ({ profile: {\r\n  user: { _id, name, avatar },\r\n  status,\r\n  company,\r\n  location,\r\n  skills\r\n} }) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"avatar\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{status} {company && <span> at {company}</span>}</p>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"text-primary\">\r\n            <i className=\"fas fa-check\"></i>{' ' + skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n\r\n","import axios from 'axios';\r\nimport { setAlert } from './alertActions';\r\nimport {\r\n  PROFILE_LOAD_SINGLE_SUCCESS,\r\n  PROFILE_LOAD_SINGLE_FAIL,\r\n  PROFILE_LOAD_PAGE_REQUEST,\r\n  PROFILE_LOAD_PAGE_SUCCESS,\r\n  PROFILE_LOAD_PAGE_FAIL,\r\n  PROFILE_LOAD_REPOS_SUCCESS,\r\n  PROFILE_LOAD_REPOS_FAIL,\r\n  PROFILE_LOAD_CURRENT_SUCCESS,\r\n  PROFILE_LOAD_CURRENT_FAIL,\r\n  PROFILE_CREATE_SUCCESS,\r\n  PROFILE_CREATE_FAIL,\r\n  PROFILE_UPDATE_SUCCESS,\r\n  PROFILE_UPDATE_FAIL,\r\n  PROFILE_ADD_EDUCATION_SUCCESS,\r\n  PROFILE_ADD_EDUCATION_FAIL,\r\n  PROFILE_ADD_EXPERIENCE_SUCCESS,\r\n  PROFILE_ADD_EXPERIENCE_FAIL,\r\n  PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS,\r\n  PROFILE_DELETE_CURRENT_EDUCATION_FAIL,\r\n  PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS,\r\n  PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL,\r\n  PROFILE_DELETE_SUCCESS,\r\n  PROFILE_DELETE_FAIL,\r\n} from './types';\r\n\r\n// Load Next Page\r\nexport const loadPage = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PROFILE_LOAD_PAGE_REQUEST });\r\n\r\n      const {\r\n        profileLoadPage: { date, page },\r\n      } = getState();\r\n\r\n      const nextPage = page + 1;\r\n      const currentDate = date !== null ? date : new Date().getTime();\r\n\r\n      const res = await axios.get(\r\n        `/api/profile/loadPage?page=${nextPage}&date=${currentDate}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PROFILE_LOAD_PAGE_SUCCESS,\r\n        payload: {\r\n          profiles: res.data,\r\n          page: nextPage,\r\n          date: currentDate,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_LOAD_PAGE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n      dispatch({\r\n        type: PROFILE_LOAD_SINGLE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_LOAD_SINGLE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n      dispatch({\r\n        type: PROFILE_LOAD_REPOS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_LOAD_REPOS_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Get current user's profile\r\nexport const getCurrentProfile = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.get('/api/profile/me', config);\r\n\r\n      dispatch({\r\n        type: PROFILE_LOAD_CURRENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_LOAD_CURRENT_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (experienceId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.delete(\r\n        `/api/profile/experience/${experienceId}`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (educationId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.delete(\r\n        `/api/profile/education/${educationId}`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_DELETE_CURRENT_EDUCATION_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n      dispatch({\r\n        type: PROFILE_ADD_EDUCATION_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Education Added', 'success'));\r\n      history.push('/dashboard');\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ADD_EDUCATION_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n      dispatch({\r\n        type: PROFILE_ADD_EXPERIENCE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Experience Added', 'success'));\r\n      history.push('/dashboard');\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ADD_EXPERIENCE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.post('/api/profile', formData, config);\r\n\r\n      dispatch({\r\n        type: edit ? PROFILE_UPDATE_SUCCESS : PROFILE_CREATE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success');\r\n\r\n      if (!edit) {\r\n        history.push('/dashboard');\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: edit ? PROFILE_UPDATE_FAIL : PROFILE_CREATE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Delete account & profile & posts\r\nexport const deleteAccount = () => {\r\n  return async (dispatch, getState) => {\r\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n      try {\r\n        const {\r\n          userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': userInfo.token,\r\n          },\r\n        };\r\n\r\n        await axios.delete(`/api/profile`, config);\r\n\r\n        dispatch({ type: PROFILE_DELETE_SUCCESS });\r\n\r\n        setAlert('Your account has been permanantly deleted');\r\n      } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n          errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n          type: PROFILE_DELETE_FAIL,\r\n          payload: {\r\n            msg: err.response.statusText,\r\n            status: err.response.status,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { loadPage } from '../../redux/actions/profileActions';\r\nimport { PROFILE_LOAD_PAGE_RESET } from '../../redux/actions/types';\r\n\r\nconst Profiles = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const profileLoadPage = useSelector((state) => state.profileLoadPage);\r\n  const { hasMore, profiles, loading, loadingPage } = profileLoadPage;\r\n\r\n  useEffect(() => {\r\n    loadProfiles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: PROFILE_LOAD_PAGE_RESET });\r\n    };\r\n  }, []);\r\n\r\n  const loadProfiles = () => {\r\n    if (!loadingPage) {\r\n      dispatch(loadPage());\r\n    }\r\n  };\r\n\r\n  const profileItems = profiles.map((profile) => {\r\n    return <ProfileItem key={profile._id} profile={profile} />;\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i> Browse and connect with\r\n            developers\r\n          </p>\r\n\r\n          {loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className='profiles'>\r\n              <InfiniteScroll hasMore={hasMore} loadMore={loadProfiles}>\r\n                {profileItems}\r\n              </InfiniteScroll>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: {\r\n      name,\r\n      avatar\r\n    }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"avatar\" />\r\n\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">{status} {company && <span> at {company}</span>}</p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className=\"fas fa-globe fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({ profile: {\r\n  bio,\r\n  skills,\r\n  user: { name }\r\n} }) => <div className=\"profile-about bg-light p-2\">\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className=\"line\"></div>\r\n      </Fragment>\r\n    )}\r\n    <h2 className=\"text-primary\">Skill Set</h2>\r\n    <div className=\"skills\">\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"p-1\">\r\n          <i className=\"fas fa-check\"></i> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>;\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getGithubRepos } from '../../redux/actions/profileActions';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const profileRepos = useSelector((state) => state.profileRepos);\r\n  const { loading, repos } = profileRepos;\r\n\r\n  useEffect(() => {\r\n    dispatch(getGithubRepos(username));\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : repos.length > 0 ? (\r\n        repos.map((repo) => (\r\n          <div key={repo.id} className='repo bg-white my-1 p-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  className='github-name'\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h4>No repositories found for this user</h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfileGithub;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../redux/actions/profileActions';\r\nimport {\r\n  PROFILE_LOAD_SINGLE_RESET,\r\n  PROFILE_LOAD_REPOS_RESET,\r\n} from '../../redux/actions/types';\r\n\r\nconst Profile = ({ match }) => {\r\n  const profileId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const profileSingle = useSelector((state) => state.profileSingle);\r\n  const { profile, loading } = profileSingle;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileById(profileId));\r\n  }, [profileId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: PROFILE_LOAD_SINGLE_RESET });\r\n      dispatch({ type: PROFILE_LOAD_REPOS_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light btn block-on-mobile back-to-profiles'>\r\n            Back To Profiles\r\n          </Link>\r\n          {userInfo && userInfo._id === profile.user._id && (\r\n            <Link to='/edit-profile' className='btn btn-dark btn block-on-mobile'>\r\n              Edit Profile\r\n            </Link>\r\n          )}\r\n\r\n          <div className='profile-grid my-1'>\r\n            {/* Top & About */}\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n\r\n            {/* Experience */}\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {/* Education */}\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {/* Github Repositories */}\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = (props) => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" className=\"btn\">\r\n        <i className=\"fas fa-user-circle text-primary\"></i>{' '}\r\n        Edit Profile\r\n      </Link>\r\n\r\n      <Link to=\"/add-experience\" className=\"btn\">\r\n        <i className=\"fab fa-black-tie text-primary\"></i>{' '}\r\n        Add Experience\r\n      </Link>\r\n\r\n      <Link to=\"/add-education\" className=\"btn\">\r\n        <i className=\"fas fa-graduation-cap text-primary\"></i>\r\n        {' '}\r\n        Add Education\r\n      </Link>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default DashboardActions;\r\n\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// for Date formating\r\nimport Moment from 'react-moment';\r\nimport { deleteExperience } from '../../redux/actions/profileActions';\r\n\r\nconst Experience = ({ experience }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteExperienceHandler = (experienceId) => {\r\n    dispatch(deleteExperience(experienceId));\r\n  };\r\n\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => onDeleteExperienceHandler(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2 text-align-center-on-mobile'>\r\n        Experience Credentials\r\n      </h2>\r\n      <div className='table-wrapper'>\r\n        <table className='table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Company</th>\r\n              <th>Title</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>{experiences}</tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// for Date formating\r\nimport Moment from 'react-moment';\r\nimport { deleteEducation } from '../../redux/actions/profileActions';\r\n\r\nconst Education = ({ education }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteEducationHandler = (educationId) => {\r\n    dispatch(deleteEducation(educationId));\r\n  };\r\n\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => onDeleteEducationHandler(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2 text-align-center-on-mobile'>\r\n        Education Credentials\r\n      </h2>\r\n      <div className='table-wrapper'>\r\n        <table className='table'>\r\n          <thead>\r\n            <tr>\r\n              <th>School</th>\r\n              <th>Degree</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>{educations}</tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Education;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport {\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n} from '../../redux/actions/profileActions';\r\nimport { ALERT_RESET } from '../../redux/actions/types';\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=dashboard');\r\n\r\n  const profileCurrent = useSelector((state) => state.profileCurrent);\r\n  const { profile, deleted, loading } = profileCurrent;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []); /* DON'T FORGET RERENDER WHEN DELETE=SUCCESS */\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, [deleted]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ALERT_RESET });\r\n    };\r\n  }, []);\r\n\r\n  const deleteAccountHandler = (profileId) => {\r\n    dispatch(deleteAccount());\r\n  };\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {userInfo && userInfo.name}\r\n      </p>\r\n      {profile ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          {profile.experience.length > 0 ? (\r\n            <Experience experience={profile.experience} />\r\n          ) : null}\r\n\r\n          {profile.education.length > 0 ? (\r\n            <Education education={profile.education} />\r\n          ) : null}\r\n\r\n          <div className='my-2'>\r\n            <button\r\n              className='btn btn-danger'\r\n              onClick={(e) => deleteAccountHandler(profile._id)}\r\n            >\r\n              <i className='fas fa-user-minus'></i> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not setup a profile yet, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addEducation } from '../../redux/actions/profileActions';\r\n\r\nconst AddEducation = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=dashboard');\r\n\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChangeHandler = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addEducation(formData, history));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any schoold or bootcamp that\r\n        you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={onSubmitHandler}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              value={current}\r\n              checked={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddEducation);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addExperience } from '../../redux/actions/profileActions';\r\n\r\nconst AddExperience = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=dashboard');\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChangeHandler = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addExperience(formData, history));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={onSubmitHandler}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              value={current}\r\n              checked={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChangeHandler(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddExperience);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { createProfile } from '../../redux/actions/profileActions';\r\n\r\nconst CreateProfile = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=dashboard');\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChangeHandler = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onFormSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProfile(formData, history));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n\r\n      <form className='form' onSubmit={onFormSubmitHandler}>\r\n        <div className='form-group'>\r\n          <select\r\n            name='status'\r\n            value={status}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          >\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateProfile);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  createProfile,\r\n  getCurrentProfile,\r\n} from '../../redux/actions/profileActions';\r\n\r\nconst initialState = {\r\n  company: '',\r\n  website: '',\r\n  location: '',\r\n  status: '',\r\n  skills: '',\r\n  githubusername: '',\r\n  bio: '',\r\n  twitter: '',\r\n  facebook: '',\r\n  linkedin: '',\r\n  youtube: '',\r\n  instagram: '',\r\n};\r\n\r\nconst EditProfile = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=dashboard');\r\n\r\n  const profileCurrent = useSelector((state) => state.profileCurrent);\r\n  const { loading, profile } = profileCurrent;\r\n\r\n  useEffect(() => {\r\n    if (!profile) dispatch(getCurrentProfile());\r\n    const profileData = { ...initialState };\r\n    if (!loading && profile) {\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      setFormData(profileData);\r\n    }\r\n  }, [profile]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChangeHandler = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onFormSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProfile(formData, history, true));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required fields</small>\r\n\r\n      <form className='form' onSubmit={onFormSubmitHandler}>\r\n        <div className='form-group'>\r\n          <select\r\n            name='status'\r\n            value={status}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          >\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChangeHandler(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChangeHandler(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditProfile);\r\n","import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n} from '../../redux/actions/postActions';\r\n\r\nconst PostItem = ({\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n  userId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const onAddLikeHandler = () => {\r\n    dispatch(addLike(_id));\r\n  };\r\n  const onRemoveLikeHandler = () => {\r\n    dispatch(removeLike(_id));\r\n  };\r\n  const onDeletePostHandler = () => {\r\n    dispatch(deletePost(_id));\r\n  };\r\n\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div className='post-top'>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='avatar' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div className='post-bottom'>\r\n        <p className='post-text my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n\r\n        {showActions && (\r\n          <div className='post-buttons'>\r\n            <button\r\n              onClick={onAddLikeHandler}\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-up'></i>{' '}\r\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n            </button>\r\n            <button\r\n              onClick={onRemoveLikeHandler}\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-down'></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n              Discussion{' '}\r\n              {comments.length > 0 && (\r\n                <span className='comment-count'>{comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {userInfo && user === userInfo._id && (\r\n              <button\r\n                type='button'\r\n                className='btn btn-danger'\r\n                onClick={onDeletePostHandler}\r\n              >\r\n                <i className='fas fa-times'></i>\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostItem;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alertActions';\r\nimport {\r\n  POST_LOAD_PAGE_REQUEST,\r\n  POST_LOAD_PAGE_SUCCESS,\r\n  POST_LOAD_PAGE_FAIL,\r\n  POST_LOAD_SINGLE_SUCCESS,\r\n  POST_LOAD_SINGLE_FAIL,\r\n  POST_ADD_REQUEST,\r\n  POST_ADD_SUCCESS,\r\n  POST_ADD_FAIL,\r\n  POST_ADD_COMMENT_REQUEST,\r\n  POST_ADD_COMMENT_SUCCESS,\r\n  POST_ADD_COMMENT_FAIL,\r\n  POST_DELETE_COMMENT_SUCCESS,\r\n  POST_DELETE_COMMENT_FAIL,\r\n  POST_UPDATE_LIKES_SUCCESS,\r\n  POST_UPDATE_LIKES_FAIL,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n} from '../actions/types';\r\n\r\n// Load Next Page\r\nexport const loadPage = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: POST_LOAD_PAGE_REQUEST });\r\n\r\n      const {\r\n        postLoadPage: { date, page },\r\n      } = getState();\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const nextPage = page + 1;\r\n      const currentDate = date !== null ? date : new Date().getTime();\r\n\r\n      const res = await axios.get(\r\n        `/api/posts/loadPage?page=${nextPage}&date=${currentDate}`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: POST_LOAD_PAGE_SUCCESS,\r\n        payload: {\r\n          posts: res.data,\r\n          page: nextPage,\r\n          date: currentDate,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_LOAD_PAGE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: POST_ADD_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': userInfo.token,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n      dispatch({\r\n        type: POST_ADD_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      setAlert('Post Created', 'success');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ADD_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Get post by id\r\nexport const getPost = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.get(`/api/posts/${postId}`, config);\r\n\r\n      dispatch({\r\n        type: POST_LOAD_SINGLE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_LOAD_SINGLE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: POST_ADD_COMMENT_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': userInfo.token,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/posts/comment/${postId}`,\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: POST_ADD_COMMENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      setAlert('Comment Added', 'success');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ADD_COMMENT_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      await axios.delete(`/api/posts/comment/${postId}/${commentId}`, config);\r\n\r\n      dispatch({\r\n        type: POST_DELETE_COMMENT_SUCCESS,\r\n        payload: commentId,\r\n      });\r\n\r\n      setAlert('Comment Deleted', 'success');\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_DELETE_COMMENT_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Add like\r\nexport const addLike = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.put(`/api/posts/like/${postId}`, {}, config);\r\n\r\n      dispatch({\r\n        type: POST_UPDATE_LIKES_SUCCESS,\r\n        payload: {\r\n          postId,\r\n          likes: res.data,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_UPDATE_LIKES_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.put(`/api/posts/unlike/${postId}`, {}, config);\r\n\r\n      dispatch({\r\n        type: POST_UPDATE_LIKES_SUCCESS,\r\n        payload: {\r\n          postId,\r\n          likes: res.data,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_UPDATE_LIKES_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': userInfo.token,\r\n        },\r\n      };\r\n\r\n      await axios.delete(`/api/posts/${postId}`, config);\r\n\r\n      dispatch({\r\n        type: POST_DELETE_SUCCESS,\r\n        payload: postId,\r\n      });\r\n\r\n      setAlert('Post Removed', 'success');\r\n    } catch (err) {\r\n      console.error(err);\r\n      dispatch({\r\n        type: POST_DELETE_FAIL,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ALERT_RESET } from '../../redux/actions/types';\r\nimport { addPost } from '../../redux/actions/postActions';\r\nimport { setAlert } from '../../redux/actions/alertActions';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) {\r\n      dispatch(setAlert('Post must contain text', 'danger'));\r\n    } else {\r\n      dispatch(addPost({ text }));\r\n    }\r\n    setText('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ALERT_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='post-form-header bg-primary'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n\r\n      <form className='form my-1' onSubmit={onSubmitHandler}>\r\n        <textarea\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        ></textarea>\r\n        <input type='submit' value='Submit' className='btn btn-dark my-1' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { loadPage } from '../../redux/actions/postActions';\r\nimport { POST_LOAD_PAGE_RESET, ALERT_RESET } from '../../redux/actions/types';\r\n\r\nconst Posts = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!userInfo) history.push('/login?redirect=posts');\r\n\r\n  const postLoadPage = useSelector((state) => state.postLoadPage);\r\n  const {\r\n    hasMore,\r\n    addedPosts,\r\n    posts,\r\n    loading,\r\n    loadingPost,\r\n    loadingPage,\r\n  } = postLoadPage;\r\n\r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: POST_LOAD_PAGE_RESET });\r\n      dispatch({ type: ALERT_RESET });\r\n    };\r\n  }, []);\r\n\r\n  const loadPosts = () => {\r\n    if (!loadingPage) {\r\n      dispatch(loadPage());\r\n    }\r\n  };\r\n\r\n  const addedPostsItems = addedPosts.map((post) => (\r\n    <PostItem key={post._id} post={post} />\r\n  ));\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      {loadingPost && (\r\n        <Spinner style={{ width: '300px', margin: 'auto', display: 'block' }} />\r\n      )}\r\n      {addedPosts.length > 0 && addedPostsItems}\r\n      {posts && (\r\n        <InfiniteScroll hasMore={hasMore} loadMore={loadPosts}>\r\n          <div className='posts'>\r\n            {posts.map((post) => (\r\n              <PostItem key={post._id} post={post} />\r\n            ))}\r\n          </div>\r\n        </InfiniteScroll>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ALERT_RESET } from '../../redux/actions/types';\r\nimport { addComment } from '../../redux/actions/postActions';\r\nimport { setAlert } from '../../redux/actions/alertActions';\r\n\r\nconst CommentForm = ({ postId }) => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) {\r\n      dispatch(setAlert('Comment must contain text', 'danger'));\r\n    } else {\r\n      dispatch(addComment(postId, { text }));\r\n    }\r\n    setText('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: ALERT_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='post-form-header bg-primary'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n\r\n      <form class='form my-1' onSubmit={onSubmitHandler}>\r\n        <textarea\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a comment'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        ></textarea>\r\n        <input type='submit' value='Submit' class='btn btn-dark my-1' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../redux/actions/postActions';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const onDeleteCommentHandler = () => {\r\n    dispatch(deleteComment(postId, _id));\r\n  };\r\n\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='avatar' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        {userInfo && user === userInfo._id && (\r\n          <button onClick={onDeleteCommentHandler} className='btn btn-danger'>\r\n            <i className='fas fa-times'></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../redux/actions/postActions';\r\nimport { POST_LOAD_SINGLE_RESET } from '../../redux/actions/types';\r\n\r\nconst Post = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const postId = match.params.id;\r\n\r\n  const postSingle = useSelector((state) => state.postSingle);\r\n  const { loading, loadingComment, post } = postSingle;\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(postId));\r\n  }, [postId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: POST_LOAD_SINGLE_RESET });\r\n    };\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn block-on-mobile'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {loadingComment && (\r\n          <Spinner\r\n            style={{ width: '300px', margin: 'auto', display: 'block' }}\r\n          />\r\n        )}\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Alert = () => {\r\n  const alertManager = useSelector((state) => state.alertManager);\r\n  const { alerts } = alertManager;\r\n  return (\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n      <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle'></i> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from '../auth/Login';\r\nimport Register from '../auth/Register';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport AddEducation from '../profile-forms/AddEducations';\r\nimport AddExperience from '../profile-forms/AddExperience';\r\nimport CreateProfile from '../profile-forms/CreateProfile';\r\nimport EditProfile from '../profile-forms/EditProfile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport Alert from '../layout/Alert';\r\nimport NotFound from '../layout/NotFound';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className='container'>\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n        <Route exact path='/profiles' component={Profiles} />\r\n        <Route exact path='/profile/:id' component={Profile} />\r\n        <Route exact path='/dashboard' component={Dashboard} />\r\n        <Route exact path='/add-education' component={AddEducation} />\r\n        <Route exact path='/add-experience' component={AddExperience} />\r\n        <Route exact path='/create-profile' component={CreateProfile} />\r\n        <Route exact path='/edit-profile' component={EditProfile} />\r\n        <Route exact path='/posts' component={Posts} />\r\n        <Route exact path='/posts/:id' component={Post} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { logout } from '../../redux/actions/userActions';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user'></i>{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n\r\n      <li>\r\n        <a onClick={logoutHandler}>\r\n          <i className='fas fa-sign-out-alt'></i>{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> ProgSoc\r\n        </Link>\r\n      </h1>\r\n      <Fragment>{userInfo ? authLinks : guestLinks}</Fragment>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (userInfo) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Programmers Social Network</h1>\r\n          <p className='lead'>\r\n            Create developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Routes from './components/routing/Routes';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route component={Routes} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nimport { alertManagerReducer } from './alertReducers';\r\nimport { userLoginReducer, userRegisterReducer } from './userReducers';\r\nimport {\r\n  profileLoadPageReducer,\r\n  profileSingleReducer,\r\n  profileReposReducer,\r\n  profileCurrentReducer,\r\n} from './profileReducers';\r\nimport { postLoadPageReducer, postSingleReducer } from './postReducers';\r\n\r\nexport default combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  profileLoadPage: profileLoadPageReducer,\r\n  profileSingle: profileSingleReducer,\r\n  profileRepos: profileReposReducer,\r\n  profileCurrent: profileCurrentReducer,\r\n  postLoadPage: postLoadPageReducer,\r\n  postSingle: postSingleReducer,\r\n  alertManager: alertManagerReducer,\r\n});\r\n","import {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_RESET,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n} from '../actions/types';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, errors: payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, errors: payload };\r\n    case USER_REGISTER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PROFILE_LOAD_PAGE_REQUEST,\r\n  PROFILE_LOAD_PAGE_SUCCESS,\r\n  PROFILE_LOAD_PAGE_FAIL,\r\n  PROFILE_LOAD_PAGE_RESET,\r\n  PROFILE_LOAD_SINGLE_SUCCESS,\r\n  PROFILE_LOAD_SINGLE_FAIL,\r\n  PROFILE_LOAD_SINGLE_RESET,\r\n  PROFILE_LOAD_REPOS_SUCCESS,\r\n  PROFILE_LOAD_REPOS_FAIL,\r\n  PROFILE_LOAD_REPOS_RESET,\r\n  PROFILE_LOAD_CURRENT_SUCCESS,\r\n  PROFILE_LOAD_CURRENT_FAIL,\r\n  PROFILE_LOAD_CURRENT_RESET,\r\n  PROFILE_CREATE_SUCCESS,\r\n  PROFILE_CREATE_FAIL,\r\n  PROFILE_UPDATE_SUCCESS,\r\n  PROFILE_UPDATE_FAIL,\r\n  PROFILE_ADD_EDUCATION_SUCCESS,\r\n  PROFILE_ADD_EDUCATION_FAIL,\r\n  PROFILE_ADD_EXPERIENCE_SUCCESS,\r\n  PROFILE_ADD_EXPERIENCE_FAIL,\r\n  PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS,\r\n  PROFILE_DELETE_CURRENT_EDUCATION_FAIL,\r\n  PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS,\r\n  PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL,\r\n  PROFILE_DELETE_SUCCESS,\r\n  PROFILE_DELETE_FAIL,\r\n} from '../actions/types';\r\n\r\nexport const profileLoadPageReducer = (\r\n  state = {\r\n    hasMore: true,\r\n    loading: true,\r\n    loadingPage: false,\r\n    profiles: [],\r\n    page: 0,\r\n    date: null,\r\n  },\r\n  action\r\n) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case PROFILE_LOAD_PAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingPage: true,\r\n      };\r\n    case PROFILE_LOAD_PAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profiles: state.profiles.concat(payload.profiles),\r\n        hasMore: payload.profiles.length > 0 ? true : false,\r\n        loading: false,\r\n        date: payload.date,\r\n        page: payload.page,\r\n        loadingPage: false,\r\n      };\r\n    case PROFILE_LOAD_PAGE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        loadingPage: false,\r\n      };\r\n    case PROFILE_LOAD_PAGE_RESET:\r\n      return {\r\n        hasMore: true,\r\n        loading: true,\r\n        loadingPage: false,\r\n        profiles: [],\r\n        page: 0,\r\n        date: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const profileSingleReducer = (state = { loading: true }, action) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case PROFILE_LOAD_SINGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profile: payload,\r\n      };\r\n    case PROFILE_LOAD_SINGLE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case PROFILE_LOAD_SINGLE_RESET:\r\n      return {\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const profileReposReducer = (state = { loading: true }, action) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case PROFILE_LOAD_REPOS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        repos: payload,\r\n      };\r\n    case PROFILE_LOAD_REPOS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case PROFILE_LOAD_REPOS_RESET:\r\n      return {\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const profileCurrentReducer = (state = { loading: true }, action) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case PROFILE_CREATE_SUCCESS:\r\n    case PROFILE_UPDATE_SUCCESS:\r\n    case PROFILE_ADD_EDUCATION_SUCCESS:\r\n    case PROFILE_ADD_EXPERIENCE_SUCCESS:\r\n    case PROFILE_DELETE_CURRENT_EXPERIENCE_SUCCESS:\r\n    case PROFILE_DELETE_CURRENT_EDUCATION_SUCCESS:\r\n    case PROFILE_LOAD_CURRENT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        profile: payload,\r\n      };\r\n    case PROFILE_CREATE_FAIL:\r\n    case PROFILE_UPDATE_FAIL:\r\n    case PROFILE_LOAD_CURRENT_FAIL:\r\n    case PROFILE_ADD_EDUCATION_FAIL:\r\n    case PROFILE_ADD_EXPERIENCE_FAIL:\r\n    case PROFILE_DELETE_CURRENT_EDUCATION_FAIL:\r\n    case PROFILE_DELETE_CURRENT_EXPERIENCE_FAIL:\r\n    case PROFILE_DELETE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case PROFILE_LOAD_CURRENT_RESET:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case PROFILE_DELETE_SUCCESS:\r\n      return {\r\n        loading: true,\r\n        deleted: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const initialState = {\r\n//   profile: null,\r\n//   profiles: [],\r\n//   repos: [],\r\n//   loading: true,\r\n//   error: {}\r\n// }\r\n\r\n// export default (state = initialState, action) => {\r\n//   const { type, payload } = action;\r\n\r\n//   switch (type) {\r\n//     case GET_PROFILE:\r\n//     case UPDATE_PROFILE:\r\n//       return {\r\n//         ...state,\r\n//         profile: payload,\r\n//         loading: false\r\n//       };\r\n//     case GET_PROFILES:\r\n//       return {\r\n//         ...state,\r\n//         profiles: payload,\r\n//         loading: false\r\n//       };\r\n//     case PROFILE_ERROR:\r\n//       return {\r\n//         ...state,\r\n//         error: payload,\r\n//         loading: false\r\n//       };\r\n//     case CLEAR_PROFILE:\r\n//       return {\r\n//         ...state,\r\n//         profile: null,\r\n//         repos: [],\r\n//         error: {}\r\n//       };\r\n\r\n//     case LOADING:\r\n//       return {\r\n//         ...state,\r\n//         loading: true\r\n//       };\r\n\r\n//     case GET_REPOS:\r\n//       return {\r\n//         ...state,\r\n//         repos: payload,\r\n//         loading: false\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n","import {\r\n  POST_LOAD_PAGE_REQUEST,\r\n  POST_LOAD_PAGE_SUCCESS,\r\n  POST_LOAD_PAGE_FAIL,\r\n  POST_LOAD_PAGE_RESET,\r\n  POST_LOAD_SINGLE_SUCCESS,\r\n  POST_LOAD_SINGLE_FAIL,\r\n  POST_LOAD_SINGLE_RESET,\r\n  POST_ADD_SUCCESS,\r\n  POST_ADD_FAIL,\r\n  POST_ADD_COMMENT_REQUEST,\r\n  POST_ADD_COMMENT_SUCCESS,\r\n  POST_ADD_COMMENT_FAIL,\r\n  POST_DELETE_COMMENT_FAIL,\r\n  POST_DELETE_COMMENT_SUCCESS,\r\n  POST_ADD_REQUEST,\r\n  POST_UPDATE_LIKES_SUCCESS,\r\n  POST_UPDATE_LIKES_FAIL,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n} from '../actions/types';\r\n\r\nexport const postLoadPageReducer = (\r\n  state = {\r\n    hasMore: true,\r\n    loading: true,\r\n    loadingPage: false,\r\n    loadingPost: false,\r\n    posts: [],\r\n    addedPosts: [],\r\n    page: 0,\r\n    date: null,\r\n  },\r\n  action\r\n) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case POST_LOAD_PAGE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingPage: true,\r\n      };\r\n    case POST_LOAD_PAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.concat(payload.posts),\r\n        hasMore: payload.posts.length > 0 ? true : false,\r\n        loading: false,\r\n        date: payload.date,\r\n        page: payload.page,\r\n        loadingPage: false,\r\n      };\r\n    case POST_LOAD_PAGE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        loadingPage: false,\r\n      };\r\n    case POST_LOAD_PAGE_RESET:\r\n      return {\r\n        hasMore: true,\r\n        loading: true,\r\n        loadingPage: false,\r\n        loadingPost: false,\r\n        posts: [],\r\n        addedPosts: [],\r\n        page: 0,\r\n        date: null,\r\n      };\r\n    case POST_ADD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingPost: true,\r\n      };\r\n    case POST_ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addedPosts: [payload, ...state.addedPosts],\r\n        loadingPost: false,\r\n      };\r\n    case POST_ADD_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loadingPost: false,\r\n      };\r\n    case POST_UPDATE_LIKES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addedPosts: state.addedPosts.map((post) =>\r\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n        ),\r\n      };\r\n    case POST_UPDATE_LIKES_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    case POST_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addedPosts: state.addedPosts.filter((post) => post._id !== payload),\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n      };\r\n    case POST_DELETE_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postSingleReducer = (\r\n  state = { loading: true, loadingComment: false },\r\n  action\r\n) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case POST_LOAD_SINGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        post: payload,\r\n      };\r\n    case POST_LOAD_SINGLE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case POST_LOAD_SINGLE_RESET:\r\n      return {\r\n        loading: true,\r\n        loadingComment: false,\r\n      };\r\n    case POST_ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loadingComment: true,\r\n      };\r\n    case POST_ADD_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: payload,\r\n        },\r\n        loadingComment: false,\r\n      };\r\n    case POST_ADD_COMMENT_FAIL:\r\n    case POST_DELETE_COMMENT_FAIL:\r\n    case POST_DELETE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const initialState = {\r\n//   posts: [],\r\n//   post: null,\r\n//   loading: true,\r\n//   error: {}\r\n// }\r\n\r\n// export default (state = initialState, action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case UPDATE_LIKES:\r\n//       return {\r\n//         ...state,\r\n//         posts: state.posts.map(post => post._id === payload.postId ? { ...post, likes: payload.likes } : post),\r\n//         loading: false\r\n//       };\r\n//     case DELETE_POST:\r\n//       return {\r\n//         ...state,\r\n//         posts: state.posts.filter(post => post._id !== payload),\r\n//         loading: false\r\n//       };\r\n//     case ADD_COMMENT:\r\n//       return {\r\n//         ...state,\r\n//         post: {\r\n//           ...state.post,\r\n//           comments: payload\r\n//         },\r\n//         loading: false\r\n//       }\r\n\r\n//     case REMOVE_COMMENT:\r\n//       return {\r\n//         ...state,\r\n//         post: {\r\n//           ...state.post,\r\n//           comments: state.post.comments.filter(comment => comment._id !== payload)\r\n//         },\r\n//         loading: false\r\n//       }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n","import { ALERT_SET, ALERT_REMOVE, ALERT_RESET } from '../actions/types';\r\n\r\nexport const alertManagerReducer = (state = { alerts: [] }, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    /*\r\n      payload = {\r\n        id: '5bd...4bd',\r\n        msg: 'I'm an error :)',\r\n        alertType: 'danger/info/success'\r\n      };\r\n     */\r\n    case ALERT_SET:\r\n      return {\r\n        alerts:\r\n          state.alerts.filter((alert) => alert.msg === payload.msg).length > 0\r\n            ? [...state.alerts]\r\n            : [...state.alerts, payload],\r\n      };\r\n    // payload = { id: '5bd...4d8' }\r\n    case ALERT_REMOVE:\r\n      return {\r\n        alerts: state.alerts.filter((alert) => alert.id !== payload),\r\n      };\r\n    case ALERT_RESET:\r\n      return {\r\n        alerts: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducers from './redux/reducers/index';\r\n\r\n// Get User information from localStorage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nexport default ({\r\n  children,\r\n  initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n  },\r\n}) => {\r\n  const middleware = [thunk];\r\n\r\n  const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n\r\n  return <Provider store={store}>{children}</Provider>;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Root from './Root';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}